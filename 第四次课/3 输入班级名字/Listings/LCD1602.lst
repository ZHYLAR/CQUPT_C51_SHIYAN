C51 COMPILER V9.54   LCD1602                                                               11/07/2023 15:08:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          //引脚定义
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_RW=P2^5;
   6          sbit LCD_E=P2^7;
   7          #define LCD_DataPort P0
   8          
   9          /**
  10            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  11            * @param  无
  12            * @retval 无
  13            */
  14          void LCD_Delay()    //@12.000MHz 1ms
  15          {
  16   1        unsigned char i, j;
  17   1      
  18   1        i = 2;
  19   1        j = 239;
  20   1        do
  21   1        {
  22   2          while (--j);
  23   2        } while (--i);
  24   1      }
  25          
  26          /**
  27            * @brief  LCD1602写命令
  28            * @param  Command 要写入的命令
  29            * @retval 无
  30            */
  31          void LCD_WriteCommand(unsigned char Command)
  32          {
  33   1        LCD_RS=0;
  34   1        LCD_RW=0;
  35   1        LCD_DataPort=Command;
  36   1        LCD_E=1;
  37   1        LCD_Delay();
  38   1        LCD_E=0;
  39   1        LCD_Delay();
  40   1      }
  41          
  42          /**
  43            * @brief  LCD1602写数据
  44            * @param  Data 要写入的数据
  45            * @retval 无
  46            */
  47          void LCD_WriteData(unsigned char Data)
  48          {
  49   1        LCD_RS=1;
  50   1        LCD_RW=0;
  51   1        LCD_DataPort=Data;
  52   1        LCD_E=1;
  53   1        LCD_Delay();
  54   1        LCD_E=0;
C51 COMPILER V9.54   LCD1602                                                               11/07/2023 15:08:26 PAGE 2   

  55   1        LCD_Delay();
  56   1      }
  57          
  58          /**
  59            * @brief  LCD1602初始化函数
  60            * @param  无
  61            * @retval 无
  62            */
  63          void LCD_Init(void)
  64          {
  65   1        LCD_WriteCommand(0x38);
  66   1        LCD_WriteCommand(0x0C);
  67   1        LCD_WriteCommand(0x06);
  68   1        LCD_WriteCommand(0x01);
  69   1      }
  70          
  71          /**
  72            * @brief  LCD1602设置光标位置
  73            * @param  Line 行位置，范围：1~2
  74            * @param  Column 列位置，范围：1~16
  75            * @retval 无
  76            */
  77          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  78          {
  79   1        if(Line==1)
  80   1        {
  81   2          LCD_WriteCommand(0x80|(Column-1));
  82   2        }
  83   1        else
  84   1        {
  85   2          LCD_WriteCommand(0x80|(Column-1)+0x40);
  86   2        }
  87   1      }
  88          
  89          /**
  90            * @brief  在LCD1602指定位置上显示一个字符
  91            * @param  Line 行位置，范围：1~2
  92            * @param  Column 列位置，范围：1~16
  93            * @param  Char 要显示的字符
  94            * @retval 无
  95            */
  96          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  97          {
  98   1        LCD_SetCursor(Line,Column);
  99   1        LCD_WriteData(Char);
 100   1      }
 101          
 102          /**
 103            * @brief  在LCD1602指定位置开始显示所给字符串
 104            * @param  Line 起始行位置，范围：1~2
 105            * @param  Column 起始列位置，范围：1~16
 106            * @param  String 要显示的字符串
 107            * @retval 无
 108            */
 109          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
 110          {
 111   1        unsigned char i;
 112   1        LCD_SetCursor(Line,Column);
 113   1        for(i=0;String[i]!='\0';i++)
 114   1        {
 115   2          LCD_WriteData(String[i]);
 116   2        }
C51 COMPILER V9.54   LCD1602                                                               11/07/2023 15:08:26 PAGE 3   

 117   1      }
 118          
 119          /**
 120            * @brief  返回值=X的Y次方
 121            */
 122          int LCD_Pow(int X,int Y)
 123          {
 124   1        unsigned char i;
 125   1        int Result=1;
 126   1        for(i=0;i<Y;i++)
 127   1        {
 128   2          Result*=X;
 129   2        }
 130   1        return Result;
 131   1      }
 132          
 133          /**
 134            * @brief  在LCD1602指定位置开始显示所给数字
 135            * @param  Line 起始行位置，范围：1~2
 136            * @param  Column 起始列位置，范围：1~16
 137            * @param  Number 要显示的数字，范围：0~65535
 138            * @param  Length 要显示数字的长度，范围：1~5
 139            * @retval 无
 140            */
 141          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 142          {
 143   1        unsigned char i;
 144   1        LCD_SetCursor(Line,Column);
 145   1        for(i=Length;i>0;i--)
 146   1        {
 147   2          LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
 148   2        }
 149   1      }
 150          
 151          /**
 152            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 153            * @param  Line 起始行位置，范围：1~2
 154            * @param  Column 起始列位置，范围：1~16
 155            * @param  Number 要显示的数字，范围：-32768~32767
 156            * @param  Length 要显示数字的长度，范围：1~5
 157            * @retval 无
 158            */
 159          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 160          {
 161   1        unsigned char i;
 162   1        unsigned int Number1;
 163   1        LCD_SetCursor(Line,Column);
 164   1        if(Number>=0)
 165   1        {
 166   2          LCD_WriteData('+');
 167   2          Number1=Number;
 168   2        }
 169   1        else
 170   1        {
 171   2          LCD_WriteData('-');
 172   2          Number1=-Number;
 173   2        }
 174   1        for(i=Length;i>0;i--)
 175   1        {
 176   2          LCD_WriteData('0'+Number1/LCD_Pow(10,i-1)%10);
 177   2        }
 178   1      }
C51 COMPILER V9.54   LCD1602                                                               11/07/2023 15:08:26 PAGE 4   

 179          
 180          /**
 181            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 182            * @param  Line 起始行位置，范围：1~2
 183            * @param  Column 起始列位置，范围：1~16
 184            * @param  Number 要显示的数字，范围：0~0xFFFF
 185            * @param  Length 要显示数字的长度，范围：1~4
 186            * @retval 无
 187            */
 188          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 189          {
 190   1        unsigned char i;
 191   1        unsigned char SingleNumber;
 192   1        LCD_SetCursor(Line,Column);
 193   1        for(i=Length;i>0;i--)
 194   1        {
 195   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 196   2          if(SingleNumber<10)
 197   2          {
 198   3            LCD_WriteData('0'+SingleNumber);
 199   3          }
 200   2          else
 201   2          {
 202   3            LCD_WriteData('A'+SingleNumber-10);
 203   3          }
 204   2        }
 205   1      }
 206          
 207          /**
 208            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 209            * @param  Line 起始行位置，范围：1~2
 210            * @param  Column 起始列位置，范围：1~16
 211            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 212            * @param  Length 要显示数字的长度，范围：1~16
 213            * @retval 无
 214            */
 215          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 216          {
 217   1        unsigned char i;
 218   1        LCD_SetCursor(Line,Column);
 219   1        for(i=Length;i>0;i--)
 220   1        {
 221   2          LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 222   2        }
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
