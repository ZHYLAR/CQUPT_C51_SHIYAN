C51 COMPILER V9.54   MAIN                                                                  10/26/2023 01:05:12 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst
                    -) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "MatrixKey.h"
   4          
   5          unsigned char NixieTable[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
   6          
   7          void Nixie(unsigned char Location,Number)
   8          {
   9   1        switch(Location)
  10   1        {
  11   2          case 1:P2_4=1;P2_3=1;P2_2=1;break;
  12   2          case 2:P2_4=1;P2_3=1;P2_2=0;break;
  13   2          case 3:P2_4=1;P2_3=0;P2_2=1;break;
  14   2          case 4:P2_4=1;P2_3=0;P2_2=0;break;
  15   2          case 5:P2_4=0;P2_3=1;P2_2=1;break;
  16   2          case 6:P2_4=0;P2_3=1;P2_2=0;break;
  17   2          case 7:P2_4=0;P2_3=0;P2_2=1;break;
  18   2          case 8:P2_4=0;P2_3=0;P2_2=0;break;
  19   2        }
  20   1        P0=NixieTable[Number];  
  21   1        Delay(1);       
  22   1        P0=0x00;        
  23   1      }
  24          
  25          
  26          char KeyNum=-1;//-1 represent that no num is sent
  27          
  28          void main()
  29          {
  30   1        unsigned int num1=0,num2=0;
  31   1        char location=0;
  32   1        unsigned char list[]={0,0,0,0,0}; 
  33   1        unsigned char loop = 200;
  34   1        unsigned char show[]={0,0,0};
  35   1        unsigned char i = 0 ;
  36   1        while(1)
  37   1        {
  38   2          
  39   2          KeyNum=MatrixKey()-1;
  40   2          if(KeyNum>=0&&KeyNum<15){
  41   3            
  42   3              list[location]=KeyNum;
  43   3              while(loop>0){
  44   4                if(KeyNum>=0&&KeyNum<=9) Nixie(8,KeyNum);
  45   4                loop--;
  46   4              }
  47   3              loop = 200;
  48   3              location++;
  49   3          }
  50   2          
  51   2          if(KeyNum==15){
  52   3            for( i=0;i<5;i++){
  53   4              list[i]=0;
  54   4            }
C51 COMPILER V9.54   MAIN                                                                  10/26/2023 01:05:12 PAGE 2   

  55   3            location=0;
  56   3            }
  57   2          
  58   2          
  59   2          if(location==5){
  60   3              location=0;
  61   3              num1 = list[0]*10+list[1];
  62   3              num2 = list[3]*10+list[4];
  63   3            
  64   3              
  65   3              if(list[2]==10){
  66   4                  show[2] = (num1+num2)/100;
  67   4                  show[1] = (num1+num2)/10;
  68   4                  show[0] = (num1+num2)%10;
  69   4              }
  70   3                
  71   3              if(list[2]==11){
  72   4                  show[2] = (num1-num2)/100;
  73   4                  show[1] = (num1-num2)/10;
  74   4                  show[0] = (num1-num2)%10;
  75   4              }
  76   3                
  77   3              if(list[2]==12){
  78   4                  show[2] = (num1*num2)/100;
  79   4                  show[1] = (num1*num2)/10;
  80   4                  show[0] = (num1*num2)%10;
  81   4              }
  82   3          
  83   3              if(list[2]==13){
  84   4                  show[2] = (num1/num2)/100;
  85   4                  show[1] = (num1/num2)/10;
  86   4                  show[0] = (num1/num2)%10;
  87   4            }
  88   3              
  89   3              while(MatrixKey()==0){
  90   4                Nixie(6,show[2]);
  91   4                Nixie(7,show[1]);
  92   4                Nixie(8,show[0]);
  93   4                
  94   4              }
  95   3              
  96   3          }
  97   2          
  98   2        }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    587    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
